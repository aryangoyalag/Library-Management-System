"""New

Revision ID: 508bf81de052
Revises: 348111344fb5
Create Date: 2024-08-02 15:07:39.239888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '508bf81de052'
down_revision: Union[str, None] = '348111344fb5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pen_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_author_pen_name'), 'author', ['pen_name'], unique=False)
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('genre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pages', sa.Integer(), nullable=True),
    sa.Column('total_copies', sa.Integer(), nullable=False),
    sa.Column('copies_available', sa.Integer(), nullable=True),
    sa.Column('copies_on_rent', sa.Integer(), nullable=False),
    sa.Column('next_available_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_genre'), 'book', ['genre'], unique=False)
    op.create_index(op.f('ix_book_title'), 'book', ['title'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_table('bookauthorassociation',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.create_table('loan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('borrower_id', sa.Integer(), nullable=False),
    sa.Column('borrowed_book_id', sa.Integer(), nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('returned', sa.Boolean(), nullable=False),
    sa.Column('overdue', sa.Boolean(), nullable=False),
    sa.Column('loan_amount', sa.Integer(), nullable=False),
    sa.Column('fine', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['borrowed_book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['borrower_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('ix_users_first_name', table_name='users')
    op.drop_index('ix_users_last_name', table_name='users')
    op.drop_table('users')
    op.drop_table('book_author_association')
    op.drop_index('ix_books_genre', table_name='books')
    op.drop_index('ix_books_title', table_name='books')
    op.drop_table('books')
    op.drop_table('loans')
    op.drop_index('ix_authors_pen_name', table_name='authors')
    op.drop_table('authors')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('pen_name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_authors_pen_name', 'authors', ['pen_name'], unique=False)
    op.create_table('loans',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('borrower_id', sa.INTEGER(), nullable=False),
    sa.Column('borrowed_book_id', sa.INTEGER(), nullable=False),
    sa.Column('issue_date', sa.DATE(), nullable=False),
    sa.Column('due_date', sa.DATE(), nullable=False),
    sa.Column('returned', sa.BOOLEAN(), nullable=True),
    sa.Column('overdue', sa.BOOLEAN(), nullable=True),
    sa.Column('loan_amount', sa.INTEGER(), nullable=False),
    sa.Column('fine', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['borrowed_book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['borrower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('genre', sa.VARCHAR(), nullable=True),
    sa.Column('pages', sa.INTEGER(), nullable=True),
    sa.Column('total_copies', sa.INTEGER(), nullable=False),
    sa.Column('copies_available', sa.INTEGER(), nullable=True),
    sa.Column('copies_on_rent', sa.INTEGER(), nullable=False),
    sa.Column('next_available_on', sa.DATE(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    op.create_index('ix_books_genre', 'books', ['genre'], unique=False)
    op.create_table('book_author_association',
    sa.Column('book_id', sa.INTEGER(), nullable=False),
    sa.Column('author_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(), nullable=False),
    sa.Column('last_name', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.Column('role', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('ix_users_last_name', 'users', ['last_name'], unique=False)
    op.create_index('ix_users_first_name', 'users', ['first_name'], unique=False)
    op.drop_table('loan')
    op.drop_table('bookauthorassociation')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_book_title'), table_name='book')
    op.drop_index(op.f('ix_book_genre'), table_name='book')
    op.drop_table('book')
    op.drop_index(op.f('ix_author_pen_name'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###
